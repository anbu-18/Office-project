from flask import jsonify
import json
import config
import mysql.connector
import base64


class malwaredetect():

####################### DB Connection ########################################
    def __init__(self):
        try:
            #decoded = base64.b64decode(config.password).decode("utf-8")
            self.conn = mysql.connector.connect(
            host=config.host,
            user=config.user,
            password=config.password,
            database=config.database
            )
            self.cursor = self.conn.cursor()
            
            
        except Exception as e:
            print ("Error while connecting DB",e)
            return "Error while connecting DB"
              
####################### Table Creation #######################################
    def table_creation(self):
        try:
            self.cursor.execute('CREATE TABLE IF NOT EXISTS urlcollection(urls TEXT)')
        except Exception as e:
            print("Error while creating table: ",e)
            return "Error while creating table"

####################### insert data into database ############################
    def table_values(self,urldata):
        try:
            url = urldata['url']
            self.cursor.execute("INSERT INTO urlcollection VALUES ('"+url+"')")
            self.conn.commit()
            return "inserted successfully"
        except Exception as e:
            print("Error while enter the values into the DB: ",e)
            return "Error while enter the values into the DB"
        finally:
            self.cursor.close()
            self.conn.close()
    
######################### fetching all values from a DB ######################
    
    def getallvalues(self):
        try:
            self.cursor.execute("SELECT * from urlcollection")
            val = self.cursor.fetchall()
            json_value = json.dumps(val)
            return json_value
        except Exception as e:
            print ("Error while fetching data: ",e)
            return "Error while fetching data"
        finally:
            self.cursor.close()
            self.conn.close()
            


########################## To check whether URL is available in DB , if yes return block else allow ############
    def detection(self,urldata):
        try:
            url = urldata['url']
            self.cursor.execute("SELECT COUNT(*) from urlcollection where urls = '"+url+"'")
            count = self.cursor.fetchone()
            if count[0] == 0:
                response = jsonify({"status":"Allow"})
                return response
            else:
                response = jsonify({"status":"Blocked"})
                return response
        except Exception as e :
            print("Error while finding URL in DB: ",e)
            return "Error while finding URL in DB"
        finally:
            self.cursor.close()
            self.conn.close()
            
############################ Clear the database ###############################
    def deleteall(self):
        try:
            self.cursor.execute("Delete from urlcollection")
            self.conn.commit()
            return "Deleted Successfully"
        except Exception as e :
            return "Error while clearing values"
        finally:
            self.cursor.close()
            self.conn.close()
        
        
